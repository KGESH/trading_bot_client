name: 'publish'
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install frontend dependencies
        run: npm install -g pnpm && pnpm install # change this to npm or pnpm depending on which one you use

      - name: Install GitHub CLI on macOS
        if: runner.os == 'macOS'
        run: brew install gh

      - name: Install GitHub CLI on Windows
        if: runner.os == 'Windows'
        run: choco install gh

      - name: Download FastAPI Binary
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          BACKEND_REPO_OWNER: ${{ secrets.BACKEND_REPO_OWNER }}
        shell: bash
        run: |
          echo $GH_PAT | gh auth login --with-token
          LATEST_RELEASE=$(gh release view --repo $BACKEND_REPO_OWNER/trading_bot_backend --json tagName -q '.tagName')
          echo "Downloading assets for release $LATEST_RELEASE..."
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            PATTERN="*Windows.exe"
          else
            PATTERN="*macOS"
          fi
          gh release download $LATEST_RELEASE --repo $BACKEND_REPO_OWNER/trading_bot_backend --pattern $PATTERN --dir ./external/backend/
          echo "Downloaded files:"
          ls -la ./external/backend/
          # Remove existing 'backend' file if it exists
          rm -f ./external/backend/backend
          # Rename the downloaded file to 'backend', removing '.exe' extension for Windows
          find ./external/backend/ -name "*${PATTERN}" -exec mv {} ./external/backend/backend \;
          # Log the binary file path
          echo "Binary file path: ./external/backend/backend"
          # Make the file executable (for non-Windows systems)
          if [[ "${{ runner.os }}" != "Windows" ]]; then
            chmod +x ./external/backend/backend
          fi
          echo "After preparation:"
          ls -la ./external/backend/
          # Finally, log the path to confirm its existence and permissions
          echo "Final binary file path and permissions:"
          ls -la ./external/backend/backend

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: __VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: '__VERSION__'
          releaseBody: ${{ github.event.head_commit.message }} # Commit message
          releaseDraft: true
          prerelease: false
          updaterJsonPreferNsis: true # set to true if you want to use NSIS for Windows
